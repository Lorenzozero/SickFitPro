// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered training split suggestion flow.
 *
 * - suggestTrainingSplit - A function that suggests a training split based on user history and goals.
 * - SuggestTrainingSplitInput - The input type for the suggestTrainingSplit function.
 * - SuggestTrainingSplitOutput - The return type for the suggestTrainingSplit function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTrainingSplitInputSchema = z.object({
  trainingHistory: z
    .string()
    .describe('The user training history, including exercises, sets, reps, and weights.'),
  trainingGoals: z.string().describe('The user training goals (e.g., muscle gain, weight loss).'),
});
export type SuggestTrainingSplitInput = z.infer<typeof SuggestTrainingSplitInputSchema>;

const SuggestTrainingSplitOutputSchema = z.object({
  suggestedSplit: z
    .string()
    .describe(
      'A suggested training split, including which muscle groups to train on which days. For example: Monday: Chest and Triceps, Tuesday: Back and Biceps, Wednesday: Rest, Thursday: Legs and Shoulders, Friday: Arms, Saturday: Rest, Sunday: Full Body'
    ),
  reasoning: z
    .string()
    .describe('The reasoning behind the suggested training split, based on the user history and goals.'),
});
export type SuggestTrainingSplitOutput = z.infer<typeof SuggestTrainingSplitOutputSchema>;

export async function suggestTrainingSplit(input: SuggestTrainingSplitInput): Promise<SuggestTrainingSplitOutput> {
  return suggestTrainingSplitFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestTrainingSplitPrompt',
  input: {schema: SuggestTrainingSplitInputSchema},
  output: {schema: SuggestTrainingSplitOutputSchema},
  prompt: `You are an expert personal trainer. Based on the user's training history and goals, you will suggest an optimal training split.

Training History: {{{trainingHistory}}}
Training Goals: {{{trainingGoals}}}

Suggested Training Split:`,
});

const suggestTrainingSplitFlow = ai.defineFlow(
  {
    name: 'suggestTrainingSplitFlow',
    inputSchema: SuggestTrainingSplitInputSchema,
    outputSchema: SuggestTrainingSplitOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
